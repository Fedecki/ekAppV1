// PROJECT PAGE FIXED NAVIGATION

@import "../settings";

//@import 'bourbon'; // http://bourbon.io/

// colors

$color-1: #2c3e51; // blue
$color-2: #00bd9b; // green
$color-3: #e84a64; // pink
$color-4: #ffffff; // white
$color-5: #eff2f6; // light blue



   
$S:     320px;   
$M:     768px;     
$L:     1170px;     

// media queries

@mixin MQ($canvas) {
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; } 
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; } 
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; } 
  }
}

// super light grid - it works with the .cd-container class inside style.scss

@mixin column($percentage, $float-direction:left) {
  width: 100% * $percentage;
  float: $float-direction;
}





// ANIMATION

@-webkit-keyframes cd-slide-in {
  0% {
    -webkit-transform: translateX(100px);
  }

  100% {
    -webkit-transform: translateY(0);
  }
}
@-moz-keyframes cd-slide-in {
  0% {
    -moz-transform: translateX(100px);
  }

  100% {
    -moz-transform: translateY(0);
  }
}
@keyframes cd-slide-in {
  0% {
    -webkit-transform: translateX(100px);
    -moz-transform: translateX(100px);
    -ms-transform: translateX(100px);
    -o-transform: translateX(100px);
    transform: translateX(100px);
  }

  100% {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0);
  }
}
@-webkit-keyframes cd-bounce-in {
  0% {
    -webkit-transform: scale(0);
  }

  60% {
    -webkit-transform: scale(1.2);
  }

  100% {
    -webkit-transform: scale(1);
  }
}
@-moz-keyframes cd-bounce-in {
  0% {
    -moz-transform: scale(0);
  }

  60% {
    -moz-transform: scale(1.2);
  }

  100% {
    -moz-transform: scale(1);
  }
}
@keyframes cd-bounce-in {
  0% {
    -webkit-transform: scale(0);
    -moz-transform: scale(0);
    -ms-transform: scale(0);
    -o-transform: scale(0);
    transform: scale(0);
  }

  60% {
    -webkit-transform: scale(1.2);
    -moz-transform: scale(1.2);
    -ms-transform: scale(1.2);
    -o-transform: scale(1.2);
    transform: scale(1.2);
  }

  100% {
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -ms-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
  }
}



/* -------------------------------- 

Primary style

-------------------------------- */

html * {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

*, *:after, *:before {
	//@include box-sizing(border-box);
}


/* -------------------------------- 

Modules - reusable parts of our design

-------------------------------- */

.cd-container { /* this class is used to give a max-width to the element it is applied to, and center it horizontally when it reaches that max-width */
	width: 90%;
	max-width: $L; // breakpoints inside partials > _layout.scss
	margin: 0 auto;

	&::after { /* clearfix */
		content: '';
		display: table;
		clear: both;
	}
}

/* -------------------------------- 

Main components 

-------------------------------- */



#cd-nav { 
	ul {
		/* mobile first */
		position: fixed;
		width: 90%;
		max-width: 400px;
		right: 5%;
		bottom: 20px;
		@include radius(4px);
		box-shadow: 0 0 10px rgba($color-3, .4);
		background: $ekleziaPrimary;
		visibility: hidden;

		/* remove overflow:hidden if you want to create a drop-down menu - but then remember to fix/eliminate the list items animation */
		overflow: hidden;

		z-index: 1;

		/* Force Hardware Acceleration in WebKit */
		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;

		@include transform(scale(0));
		@include transform-origin(100% 100%);
		-webkit-transition: -webkit-transform 0.3s, visibility 0s 0.3s;
		-moz-transition: -moz-transform 0.3s, visibility 0s 0.3s;
		transition: transform 0.3s, visibility 0s 0.3s;

		li {
			/* Force Hardware Acceleration in WebKit */
			-webkit-backface-visibility: hidden;
			backface-visibility: hidden;
		}

		&.is-visible {
			visibility: visible;
			@include transform(scale(1));
			-webkit-transition: -webkit-transform 0.3s, visibility 0s 0s;
			-moz-transition: -moz-transform 0.3s, visibility 0s 0s;
			transition: transform 0.3s, visibility 0s 0s;
		}
	}

	li a {
		display: block;
		padding: 1.6em;
		border-bottom: 1px solid $color-5;
	}

	li:last-child a {
		border-bottom: none;
	}

	@include MQ(L) {
		ul {
			/* the navigation moves to the top */
			position: absolute;
			width: auto;
			max-width: none;
			bottom: auto;
			top: 36px;
			background: transparent;
			visibility: visible;
			box-shadow: none;
			@include transform(scale(1));
			@include single-transition(all, 0s, ease-in);
		}

		li {
			display: inline-block;
		}

		li a {
			opacity: 1;
			padding: .4em;
			margin-left: 1.6em;
			border-bottom: none;

			&:hover {
				color: $color-2;
			}
		}

		&.is-fixed ul {
			/* when the user scrolls down, the navigation moves to the bottom right in Fixed position - as on touch devices */
			position: fixed;
			width: 90%;
			max-width: 400px;
			bottom: 20px;
			top: auto;
			background: $color-4;
			visibility: hidden;
			box-shadow: 0 0 10px rgba($color-3, .4);
			@include transform(scale(0));
			
			li {
				display: block;
			}

			li a {
				padding: 1.6em;
				margin-left: 0;
				border-bottom: 1px solid $color-5;
			}
		}

		ul.has-transitions {
			/* this class is used to bring back transitions when the navigation moves at the bottom right */
			-webkit-transition: -webkit-transform 0.3s, visibility 0s 0.3s;
			-moz-transition: -moz-transform 0.3s, visibility 0s 0.3s;
			transition: transform 0.3s, visibility 0s 0.3s;
		}

		ul.is-visible {
			/* this class is used to bring back the navigation animation - as on touch devices */
			visibility: visible;
			@include transform(scale(1));

			-webkit-transition: -webkit-transform 0.3s, visibility 0s 0s;
			-moz-transition: -moz-transform 0.3s, visibility 0s 0s;
			transition: transform 0.3s, visibility 0s 0s;
		}

		ul.is-hidden {
			/* this class is used to animate the scale down the navigation when the user scrolls down with the navigation still open */
			@include transform(scale(0));
			-webkit-transition: -webkit-transform 0.3s;
			-moz-transition: -moz-transform 0.3s;
			transition: transform 0.3s;
		}
	}
}

.cd-nav-trigger {
	position: fixed;
	bottom: 20px;
	right: 5%;
	width: 44px;
	height: 44px;
	background: $color-4;
	@include radius(4px);
	box-shadow: 0 0 10px rgba($color-3, .4);

	/* image replacement */
	overflow: hidden;
	text-indent: 100%;
	white-space: nowrap;

	z-index: 2;

	span {
		/* the span element is used to create the menu icon */
		position: absolute;
		display: block;
		width: 20px;
		height: 2px;
		background: $color-3;
		top: 50%;
		margin-top: -1px;
		left: 50%;
		margin-left: -10px;
		-webkit-transition: background 0.3s;
		-moz-transition: background 0.3s;
		transition: background 0.3s;

		&::before, &::after {
			content: '';
			position: absolute;
			left: 0;
			background: inherit;
			width: 100%;
			height: 100%;

			/* Force Hardware Acceleration in WebKit */
			@include transform(translateZ(0));
			-webkit-backface-visibility: hidden;
			backface-visibility: hidden;

			-webkit-transition: -webkit-transform 0.3s, background 0s;
			-moz-transition: -moz-transform 0.3s, background 0s;
			transition: transform 0.3s, background 0s;
		}

		&::before {
			top: -6px;
			@include transform(rotate(0));
		}

		&::after {
			bottom: -6px;
			@include transform(rotate(0));
		}
	}

	&.menu-is-open {
		box-shadow: none;
	}

	&.menu-is-open span {
		background: rgba($color-3, 0);

		&::before, &::after {
			background: rgba($color-3, 1);
		}

		&::before {
			top: 0;
			@include transform(rotate(135deg));
		}

		&::after {
			bottom: 0;
			@include transform(rotate(225deg));
		}
	}

	@include MQ(L) {
		/* the the menu triger is hidden by default on desktop devices */
		visibility: hidden;
		@include transform(scale(0));
		-webkit-transition: -webkit-transform 0.3s, visibility 0s 0.3s;
		-moz-transition: -moz-transform 0.3s, visibility 0s 0.3s;
		transition: transform 0.3s, visibility 0s 0.3s;

		.is-fixed & {
			visibility: visible;
			@include single-transition(all, 0s,ease-out);
			@include transform(scale(1));
			@include single-transition(all .3s ease-in);
		}
	}
}




