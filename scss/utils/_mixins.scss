// EKLEZIA MIXINS





// a. Mixins
// - - - - - - - - - - - - - - - - - - - - - - - - -


@mixin radius($radius:$global-radius) {
	@if $radius {
		border-radius: $radius;
	}
}


// We use this to do clear floats
@mixin clearfix {
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}



// generic transform
@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
	@include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
	@include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
	@include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
	@include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
	moz-transform-origin: $origin;
	-o-transform-origin: $origin;
	-ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
	transform-origin: $origin;
}



//
// Placeholder mixins
//

@mixin placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}


//
// Set font icon include 
//

@mixin fontIcon ($content, $padding, $font-size, $color) {
	font-family: "fontAwesome";
	display: block;
	content:$content;
	padding: $padding;
	font-size: $font-size;
	color: $color;
}

//
// Set offset border
//

@mixin insetBdr ($outline, $offset) {
	outline: $outline;
	outline-offset: $offset;
}

//
// Set margin and padding to 0
//

@mixin columnsReset() {
	margin: 0rem !important;
	padding: 0rem !important;
}


//
// MIXIN COVER BG
//

@mixin coverBg {
	-webkit-background-size: cover; /* pour Chrome et Safari */
	-moz-background-size: cover; /* pour Firefox */
	-o-background-size: cover; /* pour Opera */
	background-size: cover; /* version standardisÃ©e */   
}


//
// Label styling
//

@mixin labelDesign($text-transform,$color,$font-weight,$font-size,$line-height) {
	text-transform: $text-transform;
	color: $color;
	font-weight: $font-weight;
	font-size: $font-size;
	line-height: $line-height;
}


// @mixins
//
// We use this to add transitions to elements
// $property - Default: all, Options: http://www.w3.org/TR/css3-transitions/#animatable-properties
// $speed - Default: 300ms
// $ease - Default:ease-out, Options: http://css-tricks.com/almanac/properties/t/transition-timing-function/
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
	transition: $property $speed $ease;
}



// set input with icons before

@mixin inputWithIcons($background,$border, $borderBottom,$paddingLeft) {
	display: block;
	position: relative;
	@include clearfix;
	input[type=text] {
		display: block;
		background: $background;
		border: $border;
		border-bottom:$borderBottom;
		padding-left: $paddingLeft;
		position: relative;
		font-weight: bold;    
	}
}


//
// KEEP IMAGE RATIO
//

@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> img  {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}


//
// CENTER ELEMENTS VERTICALLY
//



@mixin centre($axis: "both"){
	position:absolute;
	@if $axis == "y"{
		top:50%;
		-webkit-transform: translateY(-50%);
		-moz-transform: translateY(-50%);
		-ms-transform: translateY(-50%);
		-o-transform: translateY(-50%);
		transform: translateY(-50%);
	}
	@if $axis == "x"{
		left:50%;
		-webkit-transform: translateX(-50%);
		-moz-transform: translateX(-50%);
		-ms-transform: translateX(-50%);
		-o-transform: translateX(-50%);
		transform: translateX(-50%);
	}
	@if $axis == "both"{
		top:50%;
		left:50%;
		-webkit-transform: translate(-50%, -50%);
		-moz-transform: translate(-50%, -50%);
		-ms-transform: translate(-50%, -50%);
		-o-transform: translate(-50%, -50%);
		transform: translate(-50%, -50%);
	} 		  
}

#y{
	@include centre(y);
}

#x{
	@include centre(x);
}

#both{
	@include centre;
}



//
// ADD OVERLAY
//


@mixin overlay($background) {	
	display: block;
	position: absolute;
	top:0;
	bottom:0;
	width: 100%;
	height: 100%;
	background: $background;
}


// Background Gradient: Top to Bottom
@mixin bg-gradient($start-colour, $end-colour) {
    background-color: $start-colour;
    background-image: -webkit-gradient(linear, left top, left bottom, from($start-colour), to($end-colour));
    background-image: -webkit-linear-gradient(top, $start-colour, $end-colour);
    background-image:    -moz-linear-gradient(top, $start-colour, $end-colour);
    background-image:     -ms-linear-gradient(top, $start-colour, $end-colour);
    background-image:      -o-linear-gradient(top, $start-colour, $end-colour);
    background-image:         linear-gradient(top, $start-colour, $end-colour);
    filter:            progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$start-colour}', end-colourStr='#{$end-colour}');
}



//
// USER AVATAR
//


@mixin userAvatarPic( $margin, $width, $height, $radiusPic ) {

	.userAvatar {
		display: block;
		margin: $margin;
		width: $width;
		height: $height;
		@include radius($radiusPic);
	}
	
}


















